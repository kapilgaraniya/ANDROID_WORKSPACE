dependencies {
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
}


<uses-permission android:name="android.permission.INTERNET"/>


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="20dp">


    <EditText
        android:id="@+id/etLatitude"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Latitude"
        android:inputType="numberDecimal"/>


    <EditText
        android:id="@+id/etLongitude"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Longitude"
        android:inputType="numberDecimal"
        android:layout_marginTop="10dp"/>


    <Button
        android:id="@+id/btnFetch"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Fetch Address"
        android:layout_marginTop="10dp"/>


    <TextView
        android:id="@+id/tvResult"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Address will appear here"
        android:textSize="16sp"
        android:layout_marginTop="10dp"/>
</LinearLayout>


package com.example.reversegeocodingapp


import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import retrofit2.*
import retrofit2.converter.gson.GsonConverterFactory


class MainActivity : AppCompatActivity() {


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)


        val latInput = findViewById<EditText>(R.id.etLatitude)
        val lonInput = findViewById<EditText>(R.id.etLongitude)
        val fetchButton = findViewById<Button>(R.id.btnFetch)
        val resultText = findViewById<TextView>(R.id.tvResult)


        val retrofit = Retrofit.Builder()
            .baseUrl("https://nominatim.openstreetmap.org/")
            .addConverterFactory(GsonConverterFactory.create())
            .build()


        val api = retrofit.create(GeocodingAPI::class.java)


        fetchButton.setOnClickListener {
            val lat = latInput.text.toString().toDoubleOrNull()
            val lon = lonInput.text.toString().toDoubleOrNull()


            if (lat != null && lon != null) {
                api.getAddress(lat = lat, lon = lon).enqueue(object : Callback<GeocodingResponse> {
                    override fun onResponse(
                        call: Call<GeocodingResponse>,
                        response: Response<GeocodingResponse>
                    ) {
                        if (response.isSuccessful) {
                            resultText.text = response.body()?.display_name ?: "No address found"
                        } else {
                            resultText.text = "Error: ${response.code()}"
                        }
                    }


                    override fun onFailure(call: Call<GeocodingResponse>, t: Throwable) {
                        resultText.text = "Failed: ${t.message}"
                    }
                })
            } else {
                resultText.text = "Enter valid latitude and longitude"
            }
        }
    }
}




package com.example.reversegeocodingapp


import retrofit2.Call
import retrofit2.http.GET
import retrofit2.http.Query


interface GeocodingAPI {
    @GET("reverse")
    fun getAddress(
        @Query("format") format: String = "json",
        @Query("lat") lat: Double,
        @Query("lon") lon: Double,
        @Query("zoom") zoom: Int = 18,
        @Query("addressdetails") addressDetails: Int = 1
    ): Call<GeocodingResponse>
}


package com.example.reversegeocodingapp


data class GeocodingResponse(
    val display_name: String
)